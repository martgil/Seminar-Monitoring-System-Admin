<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>